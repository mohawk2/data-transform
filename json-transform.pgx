# A simple grammar for JSON::Transform
%grammar json-transform
%version 0.01
%include pegex-atoms

# string and number from https://github.com/ingydotnet/json-pgx/blob/master/json.pgx

transforms: -transformation+

transformation: .(/-/) (
  transformImpliedDest
|
  transformCopy
|
  transformMove
|
  .ws2
) .(/-/)

transformImpliedDest: jsonPointer exprMapping

transformCopy: (jsonPointer | variableUser) .opCopyFrom -exprSingleValue exprMapping?

transformMove: jsonPointer .opMoveFrom jsonPointer

opCopyFrom: /- ( LANGLE DASH ) -/

opMoveFrom: /- ( LANGLE LANGLE ) -/

opFrom: opArrayFrom | opObjectFrom

opArrayFrom: /- ( LANGLE AT ) -/

opObjectFrom: /- ( LANGLE PERCENT ) -/

exprMapping: +opFrom (exprArrayMapping | exprObjectMapping)

exprArrayMapping: .(/- LSQUARE -/) -exprSingleValue .(/- RSQUARE -/)

exprObjectMapping: .(/- LCURLY -/) -colonPair .(/- RCURLY -/)

colonPair: exprStringValue .(/- COLON -/) exprSingleValue

exprSingleValue: (jsonPointer | variableUser | variableSystem) -singleValueMod?

singleValueMod: (exprKeyAdd | exprKeyRemove)

exprKeyAdd: .(/- PLUS -/) -colonPair

exprKeyRemove: .(/- DASH -/) -exprStringValue

exprStringValue: (jsonPointer | variableUser | variableSystem | exprStringQuoted)

exprStringQuoted: /
  GRAVE
    (
      (:
        BACK (:     # Backslash escapes
          [
            GRAVE  # Double Quote
            BACK    # Back Slash
            SLASH   # Forward Slash
            DOLLAR  # Dollar
            'b'     # Back Space
            'f'     # Form Feed
            'n'     # New Line
            'r'     # Carriage Return
            't'     # Horizontal Tab
          ]
        |
          'u' HEX{4}    # Unicode octet pair
        )
      |
        [^ GRAVE CONTROLS BACK ]  # Anything else
      )*
    )
  GRAVE
/

jsonPointer: /
  DOUBLE
    (
      (:
        BACK (:     # Backslash escapes
          [
            DOUBLE  # Double Quote
            BACK    # Back Slash
            SLASH   # Forward Slash
            DOLLAR  # Dollar
            'b'     # Back Space
            'f'     # Form Feed
            'n'     # New Line
            'r'     # Carriage Return
            't'     # Horizontal Tab
          ]
        |
          'u' HEX{4}    # Unicode octet pair
        )
      |
        [^ DOUBLE CONTROLS BACK ]  # Anything else
      )*
    )
  DOUBLE
/

variableUser: .(/- DOLLAR/) /([ LOWERS ] [ ALPHAS ]*)/

variableSystem: .(/- DOLLAR/) /([ UPPERS ]*)/

ws: / (: WS | \x{FEFF} | comment ) /

comment: / BLANK* HASH BLANK* [^\r\n]* (: EOL | CR !NL | EOS ) / # CR is because MacOS 9
